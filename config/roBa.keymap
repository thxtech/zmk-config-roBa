#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <11 12>;
        };

        shift_tab {
            bindings = <&kp LS(TAB)>;
            key-positions = <12 13>;
        };

        muhennkann {
            bindings = <&to_layer_0 INT_MUHENKAN>;
            key-positions = <11 10>;
        };

        double_quotation {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <20 21>;
        };

        eq {
            bindings = <&kp EQUAL>;
            key-positions = <24 25>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q             &kp W      &kp E      &kp R      &kp T                                         &kp Y        &kp U  &lt 5 I    &kp O    &kp P
&kp A             &kp S      &kp D      &kp F      &kp G         &kp LS(LG(S))    &kp MINUS      &kp H        &kp J  &kp K      &kp L    &kp SQT
&mt LEFT_SHIFT Z  &kp X      &kp C      &kp V      &kp B         &kp COLON        &kp SEMICOLON  &kp N        &kp M  &kp COMMA  &kp DOT  &kp SLASH
&kp ESCAPE        &kp LANG2  &kp LANG1  &kp LCTRL  &kp LEFT_WIN  &lt 1 ESC        &lt 2 ENTER    &lt 3 SPACE                             &kp EQUAL
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

        Number {
            bindings = <
&trans        &trans        &trans        &trans        &trans                          &trans        &trans        &trans        &trans        &trans
&kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp NUMBER_5  &trans    &trans  &kp NUMBER_6  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp NUMBER_0
&trans        &trans        &trans        &trans        &trans        &trans    &trans  &trans        &trans        &trans        &trans        &trans
&trans        &trans        &trans        &trans        &trans        &trans    &trans  &trans                                                  &trans
            >;
        };

        Kigou {
            bindings = <
&kp QUESTION  &trans    &trans      &trans  &trans                             &kp LEFT_BRACE  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp RIGHT_BRACE  &kp PERCENT
&kp AT        &kp HASH  &kp DOLLAR  &trans  &trans           &trans    &trans  &kp CARET       &trans                &kp ASTERISK           &trans           &trans
&trans        &trans    &trans      &trans  &kp EXCLAMATION  &trans    &trans  &kp AMPERSAND   &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &trans           &kp PIPE
&trans        &trans    &trans      &trans  &trans           &trans    &trans  &trans                                                                        &kp BACKSLASH
            >;
        };

        Contol {
            bindings = <
&kp LC(NUMBER_1)  &kp LC(NUMBER_2)  &kp LC(NUMBER_3)  &kp LC(NUMBER_4)  &kp LC(NUMBER_5)                          &kp LC(Y)       &kp LS(LC(TAB))  &kp LC(TAB)   &trans           &trans
&kp LS(LA(A))     &kp LS(LA(S))     &kp LA(LS(W))     &kp LA(LS(D))     &kp LA(LS(F))     &trans          &trans  &kp LEFT_ARROW  &kp DOWN_ARROW   &kp UP_ARROW  &kp RIGHT_ARROW  &trans
&kp LS(LG(A))     &kp LG(LS(S))     &kp LS(LG(W))     &kp LG(LS(D))     &trans            &trans          &trans  &trans          &trans           &kp LA(H)     &kp LA(L)        &trans
&trans            &trans            &trans            &kp C_VOL_DN      &kp K_MUTE        &kp C_VOL_UP    &trans  &trans                                                          &trans
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                    &trans  &trans    &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &mkp MB1  &mkp MB3  &mkp MB2  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans    &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans                                &trans
            >;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans                          &trans
            >;
        };

        layer_6 {
            bindings = <
&trans  &trans        &trans        &trans        &trans                         &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans        &trans        &trans        &trans  &trans    &trans       &trans        &trans        &trans        &trans        &trans
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans  &trans    &bootloader  &trans        &trans        &trans        &trans        &bt BT_CLR
&trans  &trans        &trans        &trans        &trans  &trans    &trans       &trans                                                  &bt BT_CLR_ALL
            >;
        };
    };
};
